# 求斐波那契数列中第n个数的值,n是正整数

# 求斐波那契数列里的第12个数
# 斐波那契数列是: 1,1,2,3,5,8,13,21,34,55,89,144 ,出第一个数和第二个数是1，其他数都是前两个数的和

a = 1
b = 1
count = 7
while count > 0: 
    # 这个核心算法就是假设有两个窗口每次循环就往右移一格，第二个窗口是第一个窗口和移动之前的第一个窗口的总和
    # 所以需要设立第三个变量，就是为了保存第一个窗口在移动之前的值
    c = a # 保存a的值，由于运算逻辑，c会保存上一次循环里的a的值也就是没有往右移一格的第一个窗口的值
    a = b
    b = c + b # 将得出的结果从新赋值给b就是第二个窗口，然后由于 a=b 所以在进行了第一次运算之后，这个值会赋值给a
    count -=1

print("斐波那契数列是{}".format(b))

# 第三个数需要交换一遍就可以了
# 第四个数需要交换两遍
# 所以要得到的数是 n 的话，就需要交换n-2遍, 所以可以发现上面34是第9个数，但是循环了7遍就可以得到了

# 使用for循环
a = 1
b = 1
for i in range(0,12-2): # 得到斐波那契数列的第12个数

    c = a
    a = b
    b += c
    print("第{0}个斐波那契数列是{1}".format(i+3,b))

print("斐波那契数列第12个数是{}".format(b)) 